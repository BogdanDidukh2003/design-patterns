swagger: "2.0"
info:
  description: This is the swagger file for the server code
  version: "1.0.0"
  title: Design-patterns REST API
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

paths:
  /customer:
    get:
      operationId: "endpoints.customer.read_all"
      tags:
        - "Customer"
      summary: "GET all method for 'customer' table"
      description: "Read the list of customers"
      responses:
        200:
          description: "Successfully read customer list"
          schema:
            type: array
            items:
              properties:
                id:
                  type: "integer"
                email:
                  type: "string"
                name:
                  type: "string"
                phone_number:
                  type: "string"
                address:
                  type: "string"
                operator_id:
                  type: "integer"
    post:
      operationId: "endpoints.customer.create"
      tags:
        - "Customer"
      summary: "POST method for 'customer' table"
      description: "Create a new customer"
      parameters:
        - name: customer
          in: body
          description: "Customer to add"
          required: True
          schema:
            type: object
            properties:
              name:
                type: "string"
              email:
                type: "string"
              phone_number:
                type: "string"
              address:
                type: "string"
              operator_id:
                type: ["null", "integer"]
      responses:
        201:
          description: "Successfully added new customer"

  /customer/{customer_id}:
    get:
      operationId: "endpoints.customer.read_one"
      tags:
        - "Customer"
      summary: "GET one method for 'customer' table"
      description: "Read one customer from the customer table"
      parameters:
        - name: customer_id
          in: path
          description: "Customer ID"
          type: integer
          required: True
      responses:
        200:
          description: "Successfully read customer"
          schema:
            properties:
              id:
                type: "integer"
              email:
                type: "string"
              name:
                type: "string"
              phone_number:
                type: "string"
              address:
                type: "string"
              operator_id:
                type: "integer"
    put:
      operationId: "endpoints.customer.update"
      tags:
        - "Customer"
      summary: "UPDATE method for 'customer' table"
      description: "Update a customer in the customer table"
      parameters:
        - name: customer_id
          in: path
          description: "Customer ID"
          type: integer
          required: True
        - name: customer
          in: body
          schema:
            type: object
            properties:
              name:
                type: "string"
              email:
                type: "string"
              phone_number:
                type: "string"
              address:
                type: "string"
              operator_id:
                type: [ "null", "integer" ]
      responses:
        200:
          description: "Successfully updated customer"
    delete:
      operationId: "endpoints.customer.delete"
      tags:
        - "Customer"
      summary: "DELETE method for 'customer' table"
      description: "Delete a customer"
      parameters:
        - name: customer_id
          in: path
          description: "Customer ID"
          type: integer
          required: True
      responses:
        200:
          description: "Successfully deleted a customer"

  /operator:
    get:
      operationId: "endpoints.operator.read_all"
      tags:
        - "Operator"
      summary: "GET all method for 'operator' table"
      description: "Read the list of operators"
      responses:
        200:
          description: "Successfully read operator list"
          schema:
            type: array
            items:
              properties:
                id:
                  type: "integer"
                email:
                  type: "string"
                name:
                  type: "string"
                phone_number:
                  type: "string"
                address:
                  type: "string"
                is_available:
                  type: "boolean"
    post:
      operationId: "endpoints.operator.create"
      tags:
        - "Operator"
      summary: "POST method for 'operator' table"
      description: "Create a new operator"
      parameters:
        - name: operator
          in: body
          description: "Operator to add"
          required: True
          schema:
            type: object
            properties:
              name:
                type: "string"
              email:
                type: "string"
              phone_number:
                type: "string"
              address:
                type: "string"
              is_available:
                type: ["null", "boolean"]
      responses:
        201:
          description: "Successfully added new operator"

  /operator/{operator_id}:
    get:
      operationId: "endpoints.operator.read_one"
      tags:
        - "Operator"
      summary: "GET one method for 'operator' table"
      description: "Read one operator from the operator table"
      parameters:
        - name: operator_id
          in: path
          description: "Operator ID"
          type: integer
          required: True
      responses:
        200:
          description: "Successfully read operator"
          schema:
            properties:
              id:
                type: "integer"
              email:
                type: "string"
              name:
                type: "string"
              phone_number:
                type: "string"
              address:
                type: "string"
              is_available:
                type: "boolean"
    put:
      operationId: "endpoints.operator.update"
      tags:
        - "Operator"
      summary: "UPDATE method for 'operator' table"
      description: "Update an operator in the operator table"
      parameters:
        - name: operator_id
          in: path
          description: "Operator ID"
          type: integer
          required: True
        - name: operator
          in: body
          schema:
            type: object
            properties:
              name:
                type: "string"
              email:
                type: "string"
              phone_number:
                type: "string"
              address:
                type: "string"
              is_available:
                type: [ "null", "boolean" ]
      responses:
        200:
          description: "Successfully updated operator"
    delete:
      operationId: "endpoints.operator.delete"
      tags:
        - "Operator"
      summary: "DELETE method for 'operator' table"
      description: "Delete an operator"
      parameters:
        - name: operator_id
          in: path
          description: "Operator ID"
          type: integer
          required: True
      responses:
        200:
          description: "Successfully deleted an operator"
